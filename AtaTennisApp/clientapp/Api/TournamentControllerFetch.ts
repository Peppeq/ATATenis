// this file is autogenerated by typewriter (used Template.tst file to generate)
import { Object } from "core-js";
// @ts-ignore
import { URL, URLSearchParams } from "url";


export class TournamentArgs {
    Id: number = null;
}
export class Tournament {
    Id: number = null;
    Name: string = null;
    StartTime: Date = null;
    EndTime: Date = null;
    Place: string = null;
    Category: TournamentCategory = null;
    PlayingSystem: PlayingSystem = null;
    BallsType: BallsType = null;
    Description: string = null;
    TournamentType: TournamentType = null;
    Draw: Draw = null;
    Match: Match[] = null;
}
export class Draw {
    Id: number = null;
    Type: DrawType = null;
    CountOfPlayers: number = null;
    TournamentId: number = null;
    Round: number = null;
    Tournament: Tournament = null;
    DrawMatch: DrawMatch[] = null;
}
export class DrawMatch {
    DrawId: number = null;
    MatchId: number = null;
    Draw: Draw = null;
    Match: Match = null;
}
export class Match {
    Id: number = null;
    TournamentId: number = null;
    Score: number = null;
    Retired: boolean = null;
    Tournament: Tournament = null;
    DrawMatch: DrawMatch[] = null;
    MatchPlayer: MatchPlayer[] = null;
}
export class MatchPlayer {
    Id: number = null;
    MatchId: number = null;
    PlayerId: number = null;
    Match: Match = null;
    Player: Player = null;
}
export class Player {
    Id: number = null;
    Name: string = null;
    Surname: string = null;
    Age: number = null;
    Height: number = null;
    Residence: string = null;
    Forehand: boolean = null;
    Backhand: boolean = null;
    Racquet: string = null;
    Surface: number = null;
    FavouritePlayer: string = null;
    TitlesCount: number = null;
    FinalistCount: number = null;
    TournamentCount: number = null;
    Member: boolean = null;
    Points: number = null;
    MatchPlayer: MatchPlayer[] = null;
}


export class TournamentCategory {
}
export class PlayingSystem {
}
export class BallsType {
}
export class TournamentType {
}
export class DrawType {
}

export default class TournamentClient {

    get<TArgs extends TournamentArgs, TResult extends Tournament>(data: TArgs): Promise<TResult> {
        var url = window.location.href;
        var apiUrl = url + "api/Tournament";
        var urlObj: URL = new URL(apiUrl);
        var param: URLSearchParams = new URLSearchParams;
        Object.keys(data).forEach(key => {
            param.append(key, data[key]);
        });
        // for(var arg in data: TournamentArgs) {
        //     param.append(arg, data[arg.toString()]);
        // }

        urlObj.search = param.toString();
        console.log(urlObj.toString());

        return fetch(urlObj.toString(), {
            method: "GET",
            headers: { 'Content-Type': 'application/json' }
        }).then(function (response: Response): Promise<TResult> {
            return response.json();
        }).then(function (response: TResult): TResult {
            return response;
        });
    }
}
