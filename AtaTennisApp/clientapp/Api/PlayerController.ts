
// This file is autogenerated by typewriter (used Template.tst file to generate)



export class PlayerResponse { 
    Players: Player[] = null;
    Test: string = null;
    Kolesa: number = null;
}
export class Player { 
    Id: number = null;
    Name: string = null;
    Surname: string = null;
    Age: number = null;
    Height: number = null;
    Residence: string = null;
    Forehand: boolean = null;
    Backhand: boolean = null;
    Racquet: string = null;
    Surface: number = null;
    FavouritePlayer: string = null;
    TitlesCount: number = null;
    FinalistCount: number = null;
    TournamentCount: number = null;
    Member: boolean = null;
    Points: number = null;
    MatchPlayer: MatchPlayer[] = null;
}
export class MatchPlayer { 
    Id: number = null;
    MatchId: number = null;
    PlayerId: number = null;
    Match: Match = null;
    Player: Player = null;
}
export class Match { 
    Id: number = null;
    TournamentId: number = null;
    Score: number = null;
    Retired: boolean = null;
    Tournament: Tournament = null;
    DrawMatch: DrawMatch[] = null;
    MatchPlayer: MatchPlayer[] = null;
}
export class Tournament { 
    Id: number = null;
    Name: string = null;
    Year: number = null;
    Place: string = null;
    Category: number = null;
    PlayingSystem: number = null;
    BallsType: number = null;
    Description: string = null;
    Points: number = null;
    Draw: Draw[] = null;
    Match: Match[] = null;
}
export class Draw { 
    Id: number = null;
    Type: number = null;
    CountOfPlayers: number = null;
    TournamentId: number = null;
    Round: number = null;
    Tournament: Tournament = null;
    DrawMatch: DrawMatch[] = null;
}
export class DrawMatch { 
    DrawId: number = null;
    MatchId: number = null;
    Draw: Draw = null;
    Match: Match = null;
}



export default class PlayerClient{

    getWithoutParams<TResult extends PlayerResponse>(): Promise<TResult> {
        return fetch('api/Player', {
            method: "get"
        }).then(function (response) {
            return response.json();
        }).then(function (response) {
            return response;
        });
    } 
}
